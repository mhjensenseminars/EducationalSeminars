TITLE: Nuclear Models
AUTHOR: Morten Hjorth-Jensen {copyright, 2013-present|CC BY-NC} at "National Superconducting Cyclotron Laboratory":"http://www.nscl.msu.edu/" and "Department of Physics and Astronomy":"https://www.pa.msu.edu/", "Michigan State University":"http://www.msu.edu/", East Lansing, MI 48824, USA
DATE:  NS3 Nuclear Physics Summer School 2018, Nuclear Models

!split 
===== Stability of matter ===== 
!bblock 
To understand why matter is stable, and thereby shed light on the limits of 
nuclear stability, is one of the 
overarching aims and intellectual challenges 
of basic research in nuclear physics. To relate the stability of matter
to the underlying fundamental forces and particles of nature as manifested in nuclear matter, is central
to present and planned rare isotope facilities. 
Important properties of nuclear systems which can reveal information about these topics 
are for example masses, and thereby binding energies, and density distributions of nuclei.  
These are quantities which convey important information on 
the shell structure of nuclei, with their 
pertinent magic numbers and shell closures or the  eventual disappearence of the latter 
away from  the valley of stability.

!eblock

!split
===== Motivation and the many scales of the nuclear many-body problem  =====
!bblock
To understand nuclei and nuclear matter theoretically means
* Understand how the laws of motion and  the fundamental forces at play govern the _nuclear world_
* Quantum Chromodynamics with quarks and gluons is the model for the strong force
* The degrees of freedom from quarks and gluons are too complicated for an *effective* theoretical study of nuclei and nuclear matter
* Effective degrees of freedom (*dof*) in terms of protons, neutrons and selected mesons like pions. These *dof* lead to an effective field theory for the nuclear forces 
* Solve the nuclear many-body problem using various mathematical algorithms, large scale diagonalization, renormalization techniques, quantum computing, machine learning, lattice quantum chromodynamics etc etc. The math spans from eigenvalue problems to stochastic modeling.
!eblock

!split
===== Where to find the material =====
!bblock
The Ipython (Jupyter) Notebook is at the link URL:"https://github.com/mhjensenseminars/EducationalSeminars/tree/master/doc/pub/nuclearmodels/ipynb"

The material in various formats (jupyter notebooks, various html and pdf formats) is at URL:"http://mhjensenseminars.github.io/EducationalSeminars/doc/web/overview.html"

The main Github address for all material is at URL:"https://github.com/mhjensenseminars/EducationalSeminars"

Feel free to use this material as you wish.
!eblock


!split
===== The nuclear many-body problem, where do we start?  =====
!bblock
During this summer school you will meet several of the above theoretical approaches to understand nuclei from a bottom-up type of approach
(lectures of Brown and Hergert).

The aim here is provide you with the starting point for modeling nuclei and nuclear matter.   

Where we do start from? 
!bpop
Our main ansatz for a many-body wave function starts with a product of single-particle wave function. 
* What is the rationale for doing so? 
* And what kind of data do we have which motivates this? Hint: Think of the periodic system of atoms
!epop

!eblock



!split 
===== Drip lines ===== 
!bblock 

Neutron (or proton)-rich nuclei are particularly interesting. As a particular chain
of isotopes (isotones) becomes more and more neutron (proton) rich, one reaches finally the limit of stability, the so-called
dripline, where one additional neutron (proton) makes the next isotope (isotone)  unstable with respect 
to the previous ones. 

The appearence or not of magic numbers and shell structures,
the formation of for example neutron skins and halos
can thence be probed via investigations of quantities like  the binding energy
or the charge radii and neutron rms radii of neutron-rich nuclei. 
These quantities have in turn important 
consequences for theoretical models of nuclear structure and their application in astrophysics.
!eblock


!split 
===== FRIB limits for the chain of calcium isotopes ===== 
!bblock 

FIGURE: [figslides/careach.png, width=500 frac=0.6] Expected experimental information on the calcium isotopes that can be obtained at FRIB. The limits for detailed spectroscopic information are around $A\sim 60$.
!eblock


!split 
===== More on "Neutron-rich nuclei":"http://iopscience.iop.org/1402-4896/2013/T152" ===== 
!bblock 
The neutron radius of ${}^{208}\mbox{Pb}$, recently extracted from the PREX 
experiment at Jefferson Laboratory  can be used to constrain the equation of state of 
neutron matter. 
!eblock

!bblock
A related quantity to the
neutron rms radius $r_n^{\mathrm{rms}}=\langle r^2\rangle_n^{1/2}$ is the neutron skin 
$r_{\mathrm{skin}}=r_n^{\mathrm{rms}}-r_p^{\mathrm{rms}}$,
where $r_p^{\mathrm{rms}}$ is the corresponding proton rms radius.  
There are several properties which relate the thickness of the neutron skin to quantities in nuclei and 
nuclear matter, such as the symmetry energy at the saturation point for nuclear matter, the slope
of the equation of state for neutron matter
or the low-energy electric dipole strength due to the pigmy dipole resonance. 
!eblock







!split 
===== Mean-field picture ===== 
!bblock 

With a mean- or average-field picture we mean that a given nucleon (either a proton or a neutron) moves in an average potential field which is set up by all other nucleons in the system. Consider for example a nucleus like ${}^{17}\mbox{O}$ with nine neutrons and eight protons. 
!eblock

!bblock
Many properties  of this nucleus can be interpreted in terms of a picture where we can view it as
one neutron on top of ${}^{16}\mbox{O}$. We infer from data and our theoretical interpretations that this additional neutron behaves almost as an individual neutron which *sees* an average interaction set up by the remaining 16 nucleons in   ${}^{16}\mbox{O}$. A nucleus like ${}^{16}\mbox{O}$ is an example of what we will denote as a good closed-shell nucleus. More later.

!eblock


!split 
===== Mean-field picture, which potential do we opt for?  ===== 
!bblock 
A simple potential model which enjoys quite some popularity in nuclear
physics, is the _three-dimensional harmonic oscillator_. This potential
model captures some of the physics of deeply bound single-particle
states but fails in reproducing the less bound single-particle
states. 
!eblock

!split 
===== Mean-field picture, more realistic model  ===== 
!bblock 

A parametrized, and more realistic, potential model which is
widely used in nuclear physics, is the so-called _Woods-Saxon_
potential. Both the harmonic oscillator and the Woods-Saxon potential
models define computational problems that can easily be solved (see
below), resulting (with the appropriate parameters) in a rather good
reproduction of experiment for nuclei which can be approximated as one
nucleon on top (or one nucleon removed) of a so-called closed-shell
system.

!eblock



!split 
===== Too simple? ===== 
!bblock 

To be able to interpret a nucleus in such a way requires at least that
we are capable of parametrizing the abovementioned interactions in
order to reproduce say the excitation spectrum of a nucleus like
${}^{17}\mbox{O}$.

With such a parametrized interaction we are able to solve
Schroedinger's equation for the motion of one nucleon in a given
field. A nucleus is however a true and complicated many-nucleon
system, with extremely many degrees of freedom and complicated
correlations, rendering the ideal solution of the many-nucleon
Schroedinger equation an impossible enterprise. It is much easier to
solve a single-particle problem with say a Woods-Saxon
potential. 

!eblock

!split 
===== Motivation, better mean-fields ===== 
!bblock 

An improvement to these simpler single-nucleon potentials is given by
the Hartree-Fock method, where the variational principle is used to
define a mean-field which the nucleons move in. There are many
different classes of mean-field methods.  

An important difference
between these methods and the simpler parametrized mean-field
potentials like the harmonic oscillator and the Woods-Saxon
potentials, is that the resulting equations contain information about
the nuclear forces present in our models for solving Schroedinger's
equation. Hartree-Fock and other mean-field methods like density
functional theory can be considered as essential *kitchen items* in our attempts in solving the nuclear many-body problem.

!eblock



!split 
===== Aims here ===== 
!bblock 

The aim here is to present some of the experimental data we
will confront theory with. In particular, we will focus on separation
and shell-gap energies and use these to build a picture of nuclei in
terms of (from a philosophical stand we would call this a reductionist
approach) a single-particle picture. 

The harmonic oscillator will
serve as an excellent starting point in building nuclei from the
bottom and up. Here we will neglect a theoretical description in terms of the underlying nuclear forces (see Brown's and Hergert's lectures).

!eblock


!split 
===== Aims here ===== 
!bblock 



The aims here are to develop our physics intuition of nuclear
systems using a theoretical approach where we describe data in terms
of the motion of individual nucleons and their mutual interactions.

!eblock




!split 
===== Do we understand the physics of dripline systems? ===== 
!bblock 
Our first approach in analyzing data theoretically, is to see if we can use experimental information to 

* Extract information about a *so-called* single-particle  behavior
* And interpret such a behavior in terms of the underlying forces and microscopic physics

The next step is to see if we could use these interpretations to say something about shell closures and magic numbers. Since we focus on single-particle properties, a quantity we can extract from experiment is the separation energy for protons and neutrons. Before we proceed, we need to define quantities like masses and binding energies.   Two excellent reviews on 
recent trends in the determination of nuclear masses can be found in the articles of "Lunney and co-workers":"http://journals.aps.org/rmp/abstract/10.1103/RevModPhys.75.1021" and "Blaum and co-workers":"http://iopscience.iop.org/1402-4896/2013/T152/014017/"
!eblock


!split 
===== Masses and Binding energies ===== 
!bblock
A basic quantity which can be measured for the ground states of nuclei is the atomic mass $M(N, Z)$ of the neutral atom with atomic mass number $A$ and charge $Z$. The number of neutrons is $N$.

Atomic masses are usually tabulated in terms of the mass excess defined by
!bt
\[
\Delta M(N, Z) =  M(N, Z) - uA,
\]
!et
where $u$ is the Atomic Mass Unit 
!bt
\[
u = M(^{12}\mathrm{C})/12 = 931.49386 \hspace{0.1cm} \mathrm{MeV}/c^2.
\]
!et
Here we will use
data from the 2003 compilation of "Audi, Wapstra and Thibault":"http://www.sciencedirect.com/science/journal/03759474/729/1".
!eblock

!split 
===== Masses and Binding energies ===== 
!bblock
The nucleon masses are
!bt 
\[
m_p = 938.27203(8)\hspace{0.1cm} \mathrm{MeV}/c^2 = 1.00727646688(13)u,
\] 
!et
and
!bt 
\[
m_n = 939.56536(8)\hspace{0.1cm} \mathrm{MeV}/c^2 = 1.0086649156(6)u.
\]
!et

In the 2003 mass evaluation there are 2127 nuclei measured with an accuracy of 0.2
MeV or better, and 101 nuclei measured with an accuracy of greater than 0.2 MeV. For
heavy nuclei one observes several chains of nuclei with a constant $N-Z$ value whose masses are obtained from the energy released in $\alpha$-decay.
!eblock


!split 
===== Masses and Binding energies ===== 
!bblock
The nuclear binding energy is defined as the energy required to break up a given nucleus
into its constituent parts of $N$ neutrons and $Z$ protons. In terms of the atomic masses $M(N, Z)$ the binding energy is defined by
!bt
\[
BE(N, Z) = ZM_H c^2 + Nm_n c^2 - M(N, Z)c^2 ,
\]
!et
where $M_H$ is the mass of the hydrogen atom and $m_n$ is the mass of the neutron.
In terms of the mass excess the binding energy is given by
!bt
\[
BE(N, Z) = Z\Delta_H c^2 + N\Delta_n c^2 -\Delta(N, Z)c^2 ,
\]
!et
where $\Delta_H c^2 = 7.2890$ MeV and $\Delta_n c^2 = 8.0713$ MeV.

!eblock

!split 
===== Masses and Binding energies ===== 
!bblock
The following python program reads in the experimental data on binding energies and, stored in the file bindingenergies.dat,  plots them as function of the mass number $A$. One notices clearly a saturation of the binding energy per nucleon at $A\approx 56$.
!bc pyscpro
import numpy as np
from  matplotlib import pyplot as plt
# Load in data file
data = np.loadtxt("datafiles/bindingenergies.dat")
# Make arrays containing x-axis and binding energies as function of A
x = data[:,2]
bexpt = data[:,3]
plt.plot(x, bexpt ,'ro')
plt.axis([0,270,-1, 10.0])
plt.xlabel(r'$A$')
plt.ylabel(r'Binding energies in [MeV]')
plt.legend(('Experiment'), loc='upper right')
plt.title(r'Binding energies from experiment')
plt.show()
!ec
!eblock


!split
===== Liquid drop model as a simple parametrization of binding energies  =====
!bblock 

A popular and physically intuitive model which can be used to parametrize 
the experimental binding energies as function of $A$, is the so-called 
the liquid drop model. The ansatz is based on the following expression
!bt
\[ 
BE(N,Z) = a_1A-a_2A^{2/3}-a_3\frac{Z^2}{A^{1/3}}-a_4\frac{(N-Z)^2}{A},
\]
!et
where $A$ stands for the number of nucleons and the $a_i$s are parameters which are determined by a fit 
to the experimental data.  
!eblock


!split
===== Liquid drop model as a simple parametrization of binding energies  =====
!bblock 
To arrive at the above expression we have assumed that we can make the following assumptions:

 * There is a volume term $a_1A$ proportional with the number of nucleons (the energy is also an extensive quantity). When an assembly of nucleons of the same size is packed together into the smallest volume, each interior nucleon has a certain number of other nucleons in contact with it. This contribution is proportional to the volume.

 * There is a surface energy term $a_2A^{2/3}$. The assumption here is that a nucleon at the surface of a nucleus interacts with fewer other nucleons than one in the interior of the nucleus and hence its binding energy is less. This surface energy term takes that into account and is therefore negative and is proportional to the surface area.

!eblock

!split
===== Liquid drop model as a simple parametrization of binding energies, continues  =====
!bblock 

 * There is a Coulomb energy term $a_3\frac{Z^2}{A^{1/3}}$. The electric repulsion between each pair of protons in a nucleus yields less binding. 

 * There is an asymmetry term $a_4\frac{(N-Z)^2}{A}$. This term is associated with the Pauli exclusion principle and reflectd the fact that the proton-neutron interaction is more attractive on the average than the neutron-neutron and proton-proton interactions.

We could also add a so-called pairing term, which is a correction term that
arises from the tendency of proton pairs and neutron pairs to
occur. An even number of particles is more stable than an odd number. 
Performing a least-square fit to data, we obtain the following numerical values for the various constants
* $a_1=15.49$ MeV
* $a_2=17.23$ MeV
* $a_3=0.697$ MeV
* $a_4=22.6$ MeV

!eblock



!split 
===== Masses and Binding energies ===== 
!bblock
The following python program reads now in the experimental data on binding energies as well as the results from the above liquid drop model and plots these energies as function of the mass number $A$. One sees that for larger values of $A$, there is a better agreement with data. 
!bc pycod
import numpy as np
from  matplotlib import pyplot as plt
# Load in data file
data = np.loadtxt("datafiles/bindingenergies.dat")
# Make arrays containing x-axis and binding energies as function of
x = data[:,2]
bexpt = data[:,3]
liquiddrop = data[:,4]
plt.plot(x, bexpt ,'b-o', x, liquiddrop, 'r-o')
plt.axis([0,270,-1, 10.0])
plt.xlabel(r'$A$')
plt.ylabel(r'Binding energies in [MeV]')
plt.legend(('Experiment','Liquid Drop'), loc='upper right')
plt.title(r'Binding energies from experiment and liquid drop')
plt.show()
!ec
!eblock



!split 
===== Masses and Binding energies ===== 
!bblock
This   python program reads now in the experimental data on binding energies and performs a nonlinear least square fitting of the data. In the example here we use only the parameters $a_1$ and $a_2$, leaving it as an exercise to the reader to perform the fit for all four paramters. The results are plotted and compared with the experimental values.  To read more about non-linear least square methods, see for example the text of M.J. Box, D. Davies and W.H. Swann, Non-Linear optimisation Techniques, Oliver & Boyd, 1969.

!bc pycod
import numpy as np
from scipy.optimize import curve_fit
from  matplotlib import pyplot as plt
# Load in data file
data = np.loadtxt("datafiles/bindingenergies.dat")
# Make arrays containing A on x-axis and binding energies
A = data[:,2]
bexpt = data[:,3]
# The function we want to fit to, only two terms here
def func(A,a1, a2):
    return a1*A-a2*(A**(2.0/3.0))
# function to perform nonlinear least square with guess for a1 and a2
popt, pcov = curve_fit(func, A, bexpt, p0 = (16.0, 18.0))
a1  = popt[0]
a2 = popt[1]
liquiddrop = a1*A-a2*(A**(2.0/3.0))

plt.plot(A, bexpt ,'bo', A, liquiddrop, 'ro')
plt.axis([0,270,-1, 10.0])
plt.xlabel(r'$A$')
plt.ylabel(r'Binding energies in [MeV]')
plt.legend(('Experiment','Liquid Drop'), loc='upper right')
plt.title(r'Binding energies from experiment and liquid drop')
plt.show()
!ec
Try to add more terms to the fitting as an exercise, or feel tempted to study Machine Learning!
A cute article which uses Machine Learning to extract info on mass models
* "Utama and Piekarewicz, Validating neural-network refinements of nuclear mass models, Phys. Rev. C 97, 014306 ":"https://journals.aps.org/prc/abstract/10.1103/PhysRevC.97.014306"


!eblock




!split 
===== $Q$-values and separation energies ===== 
!bblock
We are now interested in interpreting experimental binding energies  in terms of a single-particle picture.
In order to do so, we  consider first energy conservation for nuclear transformations that include, for
example, the fusion of two nuclei $a$ and $b$ into the combined system $c$
!bt
\[
{^{N_a+Z_a}}a+ {^{N_b+Z_b}}b\rightarrow {^{N_c+Z_c}}c
\]
!et
or the decay of nucleus $c$ into two other nuclei $a$ and $b$
!bt
\[
^{N_c+Z_c}c \rightarrow  ^{N_a+Z_a}a+ ^{N_b+Z_b}b
\]
!et
!eblock

!split 
===== $Q$-values and separation energies ===== 
!bblock
In general we have the reactions
!bt
\[
\sum_i {^{N_i+Z_i}}i \rightarrow  \sum_f {^{N_f+Z_f}}f
\]
!et
We require also that the number of protons and neutrons (the total number of nucleons) is conserved in the initial stage and final stage, unless we have processes which violate baryon conservation, 
!bt
\[
\sum_iN_i = \sum_f N_f \hspace{0.2cm}\mathrm{and} \hspace{0.2cm}\sum_iZ_i = \sum_f Z_f.
\]
!et

!eblock



!split 
===== Motivation ===== 
!bblock Do we understand the physics of dripline systems?
Artist's rendition of the emission of one proton from various oxygen isotopes. Protons are in red while neutrons are in blue. These processes could be interpreted as the decay
nucleus $c$ into two other nuclei $a$ and $b$
!bt
\[
^{N_c+Z_c}c \rightarrow  ^{N_a+Z_a}a+ ^{N_b+Z_b}b .
\]
!et
FIGURE: [figslides/oxygens.jpg, width=600 frac=0.6] Artist's rendition of the emission of one proton from various oxygen isotopes.
!eblock


!split 
===== $Q$-values and separation energies ===== 
!bblock
The above processes can be characterized by an energy difference called the $Q$ value, defined as
!bt
\[
Q=\sum_i M(N_i, Z_i)c^2-\sum_f M(N_f, Z_f)c^2=\sum_i BE(N_f, Z_f)-\sum_i BE(N_i, Z_i)
\]
!et
Spontaneous decay involves a single initial nuclear state and is allowed if $Q > 0$. In the decay, energy is released in the form of the kinetic energy of the final products. Reactions involving two initial nuclei are called endothermic (a net loss of energy) if $Q < 0$. The reactions are exothermic (a net release of energy) if $Q > 0$.
!eblock


!split 
===== $Q$-values and separation energies ===== 
!bblock
Let us study the Q values associated with the removal of one or two nucleons from
a nucleus. These are conventionally defined in terms of the one-nucleon and two-nucleon
separation energies. The neutron separation energy is defined as 
!bt
\[
S_n= -Q_n= BE(N,Z)-BE(N-1,Z),
\]
!et
and the proton separation energy reads
!bt
\[
S_p= -Q_p= BE(N,Z)-BE(N,Z-1).
\]
!et
The two-neutron separation energy is defined as
!bt
\[
S_{2n}= -Q_{2n}= BE(N,Z)-BE(N-2,Z),
\]
!et
and  the two-proton separation energy is given by
!bt
\[
S_{2p}= -Q_{2p}= BE(N,Z)-BE(N,Z-2).
\]
!et
!eblock


!split 
=====  Separation energies and energy gaps ===== 
!bblock
Using say the neutron separation energies (alternatively the proton separation energies)
!bt
\[
S_n= -Q_n= BE(N,Z)-BE(N-1,Z),
\]
!et
we can define the so-called energy gap for neutrons (or protons) as 
!bt
\[
\Delta S_n= BE(N,Z)-BE(N-1,Z)-\left(BE(N+1,Z)-BE(N,Z)\right),
\]
!et
or 
!bt
\[
\Delta S_n= 2BE(N,Z)-BE(N-1,Z)-BE(N+1,Z).
\]
!et
This quantity can in turn be used to determine which nuclei are magic or not. 
For protons we would have 
!bt
\[
\Delta S_p= 2BE(N,Z)-BE(N,Z-1)-BE(N,Z+1).
\]
!et
We leave it as an exercise to the reader to define and interpret the two-neutron or two-proton gaps. 
!eblock


!split 
=====  Separation energies for oxygen isotopes ===== 
!bblock
The following python programs can now be used to plot the separation energies and the energy gaps for the oxygen isotopes.  The following python code reads the separation energies from file for all oxygen isotopes from $A=13$ to $A=25$, The data are taken from the file *snox.dat*.  This files contains the separation energies and the shell gap energies.
!bc pycod

import numpy as np
from  matplotlib import pyplot as plt
# Load in data file
data = np.loadtxt("datafiles/snox.dat")
# Make arrays containing x-axis and binding energies as function of
x = data[:,1]
y = data[:,2]

plt.plot(x, y,'b-+',markersize=6)
plt.axis([4,18,-1, 25.0])
plt.xlabel(r'Number of neutrons $N$',fontsize=20)
plt.ylabel(r'$S_n$ [MeV]',fontsize=20)
plt.legend(('Separation energies for oxygen isotpes'), loc='upper right')
plt.title(r'Separation energy for the oxygen isotopes')
plt.show()
!ec
!eblock


!split 
=====  Energy gaps for oxygen isotopes ===== 
!bblock
Here we display the python program for plotting the corresponding results for shell gaps for the oxygen isotopes. 
!bc pycod

import numpy as np
from  matplotlib import pyplot as plt
# Load in data file
data = np.loadtxt("datafiles/snox.dat")
# Make arrays containing x-axis and binding energies as function of
x = data[:,1]
y = data[:,3]

plt.plot(x, y,'b-+',markersize=6)
plt.axis([4,18,-7, 12.0])
plt.xlabel(r'Number of neutrons $N$',fontsize=20)
plt.ylabel(r'$\Delta S_n$ [MeV]',fontsize=20)
plt.legend(('Shell gap energies for oxygen isotpes'), loc='upper right')
plt.title(r'Shell gap energies for the oxygen isotopes')
plt.show()
!ec

!eblock




!split
===== Features to be noted  =====
!bblock
Since we will focus in the beginning on single-particle degrees of freedom and mean-field approaches there are some features to be noted

* In the discussion of the liquid drop model and binding energies, we note that the total binding energy is not that different from the sum of the individual neutron and proton masses. 
One may thus infer that intrinsic properties of nucleons in a nucleus are close to those of free nucleons.
* In the discussion of the neutron separation energies for the oxygen isotopes, we note  a clear staggering effect between odd and even isotopes with the even ones being more bound (larger separation energies). This is linked with a  strong pairing correlations in nuclei.

!eblock 


!split
===== Features to be noted, continues  =====
!bblock
* The neutron separation energy becomes negative at ${}^{25}\mbox{O}$, making this nucleus unstable with respect to the emission of one neutron. A nucleus like ${}^{24}\mbox{O}$ is thus the last stable oxygen isotopes which has been observed. Oxygen-26 has been "found":"journals.aps.org/prl/abstract/10.1103/PhysRevLett.108.142503"  to be unbound with respect to ${}^{24}\mbox{O}$.
* We note also that there are large shell-gaps for some nuclei, meaning that more energy is needed to remove one nucleon. These gaps are used to define so-called magic numbers. For the oxygen isotopes we see a clear gap for ${}^{16}\mbox{O}$. We will interpret this gap as one of several experimental properties that define so-called magic numbers. In our discussion below we will make a first interpretation using  single-particle states from the harmonic oscillator and the Woods-Saxon potential. 

In the exercise below you will be asked to perform a similar analysis for other chains of isotopes and interpret the results. 
!eblock 

!split
=====  Exercise: Masses and binding energies   =====
The data on binding energies can be found in the file bedata.dat (go to the datafiles folder)
!bsubex
Write a small program which reads in the proton and neutron numbers and the binding energies 
and make a plot of all neutron separation energies for the chain of oxygen (O), calcium (Ca), nickel (Ni), tin (Sn) and lead (Pb) isotopes, that is you need to plot
!bt
\[
S_n= BE(N,Z)-BE(N-1,Z).
\]
!et
Comment your results. 
!esubex

!bsubex
Include in the same figure(s) the liquid drop model results, namely
!bt
\[
BE(N,Z)= \alpha_1A-\alpha_2A^{2/3}-\alpha_3\frac{Z^2}{A^{1/3}}-\alpha_4\frac{(N-Z)^2}{A},
\]
!et 
with $\alpha_1=15.49$ MeV, $\alpha_2=17.23$ MeV, $\alpha_3=0.697$ MeV and $\alpha_4=22.6$ MeV. Comment your results
!esubex
!bsubex
Make a plot of the binding energies as function of the number of nucleons $A$ using the data in the file on bindingenergies and the above liquid drop model. 
!esubex
!bsubex
Use the liquid drop model to find the neutron drip lines   for Z values up to 120.
Analyze then the fluorine isotopes and find, where available the corresponding experimental data, and compare the liquid drop model predicition with experiment.  Comment your results.
!esubex


!split
===== Our first attempt at a model,  harmonic oscillator spectrum  =====
!bblock
FIGURE: [figslides/singleparticle.png, width=500 frac=0.6] Single-particle spectrum and quantum numbers for a harmonic oscillator potential and a Woods-Saxon potential with and without a spin-orbit force.
!eblock

!split
===== The Woods-Saxon potential  =====
!bblock
The Woods-Saxon potential is a mean field potential for the nucleons (protons and neutrons) 
inside an atomic nucleus. It represent an average potential that a given nucleon feels from  the forces applied on each nucleon. 
The parametrization is
!bt
\[
\hat{u}_{\mathrm{ext}}(r)=-\frac{V_0}{1+\exp{(r-R)/a}},
\]
!et
with $V_0\approx 50$ MeV representing the potential well depth, $a\approx 0.5$ fm 
length representing the "surface thickness" of the nucleus and $R=r_0A^{1/3}$, with $r_0=1.25$ fm and $A$ the number of nucleons.
The value for $r_0$ can be extracted from a fit to data, see for example "M. Kirson's article":"http://www.sciencedirect.com/science/article/pii/S037594740600769X".
!eblock


!split
===== The Woods-Saxon potential  =====
!bblock
The following python code produces a plot of the Woods-Saxon potential with the above parameters. 

!bc pycod
import numpy as np
from  matplotlib import pyplot as plt
from matplotlib import rc, rcParams
import matplotlib.units as units
import matplotlib.ticker as ticker
rc('text',usetex=True)
rc('font',**{'family':'serif','serif':['Woods-Saxon potential']})
font = {'family' : 'serif',
        'color'  : 'darkred',
        'weight' : 'normal',
        'size'   : 16,
        }
v0 = 50
A = 100
a = 0.5
r0 = 1.25
R = r0*A**(0.3333)
x = np.linspace(0.0, 10.0)
y = -v0/(1+np.exp((x-R)/a))

plt.plot(x, y, 'b-')
plt.title(r'{\bf Woods-Saxon potential}', fontsize=20)     
plt.text(3, -40, r'Parameters: $A=20$, $V_0=50$ [MeV]', fontdict=font)
plt.text(3, -44, r'$a=0.5$ [fm], $r_0=1.25$ [fm]', fontdict=font)
plt.xlabel(r'$r$ [fm]',fontsize=20)
plt.ylabel(r'$V(r)$ [MeV]',fontsize=20)

# Tweak spacing to prevent clipping of ylabel
plt.subplots_adjust(left=0.15)
!ec
From the plot we notice that the potential
* rapidly approaches zero as $r$ goes to infinity, reflecting the short-distance nature of the strong nuclear force.
* For large $A$, it is approximately flat in the center.
* Nucleons near the surface of the nucleus experience a large force towards the center.
!eblock




!split
===== Single-particle Hamiltonians and spin-orbit force  =====
!bblock
We have introduced a single-particle Hamiltonian
!bt
\[
  H_0=\sum_{i=1}^A \hat{h}_0(x_i) =  \sum_{i=1}^A\left(\hat{t}(x_i) + \hat{u}_{\mathrm{ext}}(x_i)\right),
\]
!et
with an external and central symmetric potential $u_{\mathrm{ext}}(x_i)$, which is often 
approximated by a harmonic oscillator potential or a Woods-Saxon potential. Being central symmetric leads to a degeneracy 
in energy which is not observed experimentally. We see this from for example our discussion of separation energies and magic numbers. There are, in addition to the assumed magic numbers from a harmonic oscillator basis of $2,8,20,40,70\dots$ magic numbers like $28$, $50$, $82$ and $126$. 

To produce these additional numbers, we need to add a phenomenological spin-orbit force which lifts the degeneracy, that is
!bt
\[
\hat{h}(x_i) =  \hat{t}(x_i) + \hat{u}_{\mathrm{ext}}(x_i) +\xi(\bm{r})\bm{ls}=\hat{h}_0(x_i)+\xi(\bm{r})\bm{ls}. 
\]
!et
!eblock

!split
===== Single-particle Hamiltonians and spin-orbit force  =====
!bblock
We have introduced a modified single-particle Hamiltonian
!bt
\[
\hat{h}(x_i) =  \hat{t}(x_i) + \hat{u}_{\mathrm{ext}}(x_i) +\xi(\bm{r})\bm{ls}=\hat{h}_0(x_i)+\xi(\bm{r})\bm{ls}. 
\]
!et
We can calculate the expectation value of the latter using the fact that
!bt
\[
\xi(\bm{r})\bm{ls}=\frac{1}{2}\xi(\bm{r})\left(\bm{j}^2-\bm{l}^2-\bm{s}^2\right).
\]
!et
For a single-particle state with quantum numbers $nlj$ (we suppress $s$ and $m_j$), with $s=1/2$, we obtain the single-particle energies
!bt
\[
\varepsilon_{nlj} = \varepsilon_{nlj}^{(0)}+\Delta\varepsilon_{nlj}, 
\]
!et
with $\varepsilon_{nlj}^{(0)}$ being the single-particle energy obtained with $\hat{h}_0(x)$ and
!bt 
\[
\Delta\varepsilon_{nlj}=\frac{C}{2}\left(j(j+1)-l(l+1)-\frac{3}{4}\right).
\]
!et
!eblock

!split
=====   Single-particle Hamiltonians and spin-orbit force  =====
!bblock
The spin-orbit force gives thus an additional contribution to the energy
!bt
\[
\Delta\varepsilon_{nlj}=\frac{C}{2}\left(j(j+1)-l(l+1)-\frac{3}{4}\right),
\]
!et
which lifts the degeneracy we have seen before in the harmonic oscillator or Woods-Saxon potentials. The value $C$ is the radial
integral involving $\xi(\bm{r})$. Depending on the value of $j=l\pm 1/2$, we obtain 
!bt
\[
\Delta\varepsilon_{nlj=l-1/2}=\frac{C}{2}l,
\]
!et
or
!bt
\[
\Delta\varepsilon_{nlj=l+1/2}=-\frac{C}{2}(l+1),
\]
!et
clearly lifting the degeneracy. Note well that till now we have simply postulated the spin-orbit force in *ad hoc* way.
This term arises from the nuclear force in a natural way. 
!eblock

!split
=====   Single-particle Hamiltonians and spin-orbit force  =====
!bblock
With the spin-orbit force, we can modify our Woods-Saxon potential to 
!bt
\[
\hat{u}_{\mathrm{ext}}(r)=-\frac{V_0}{1+\exp{(r-R)/a}}+V_{so}(r)\bm{ls},
\]
!et
with
!bt 
\[
V_{so}(r) = V_{so}\frac{1}{r}\frac{d f_{so}(r)}{dr},
\]
!et
where we have 
!bt
\[
f_{so}(r) = \frac{1}{1+\exp{(r-R_{so})/a_{so}}}.
\]
!et
!eblock

!split 
===== Single-particle Hamiltonians and spin-orbit force =====
!bblock 
We can also add, in case of proton, a Coulomb potential. The
Woods-Saxon potential has been widely used in parametrizations of
effective single-particle potentials. 

_However, as was the case with
the harmonic oscillator, none of these potentials are linked directly
to the nuclear forces_. 

This is solved by building a mean field based
on the nucleon-nucleon interaction and forms the basis for the discussions of Brown and Hergert.

!eblock




!split
=====   Single-particle Hamiltonians and spin-orbit force  =====
!bblock
The Woods-Saxon potential does allow for closed-form or analytical solutions of the eigenvalue problem
!bt 
\[
  \hat{h}_0(x_i)\psi_{\alpha}(x_i)=\varepsilon_{\alpha}\psi_{\alpha}(x_i).  
\]
!et
For the harmonic oscillator in three dimensions we have closed-form expressions for the energies and analytical solutions for the eigenstates,
with the latter given by either Hermite polynomials (cartesian coordinates) or Laguerre polynomials (spherical coordinates).

To solve the above equation is however rather straightforward numerically. 

!eblock

!split
===== Numerical solution of the single-particle Schroedinger equation =====
!bblock 
We will illustrate the numerical solution of Schroedinger's equation by solving it for the harmonic oscillator in three dimensions.
It is straightforward to change the harmonic oscillator potential with a Woods-Saxon potential, or any other type of potentials. 

We are interested in the solution of the radial part of Schroedinger's equation for one nucleon. 
The angular momentum part  is given by the so-called Spherical harmonics. 
 
The radial equation reads
!bt
\[
  -\frac{\hbar^2}{2 m} \left ( \frac{1}{r^2} \frac{d}{dr} r^2
  \frac{d}{dr} - \frac{l (l + 1)}{r^2} \right )R(r) 
     + V(r) R(r) = E R(r).
\]
!et
!eblock

!split
===== Numerical solution of the single-particle Schroedinger equation =====
!bblock 
In our case $V(r)$ is the harmonic oscillator potential $(1/2)kr^2$ with
$k=m\omega^2$ and $E$ is
the energy of the harmonic oscillator in three dimensions.
The oscillator frequency is $\omega$ and the energies are
!bt
\[
E_{nl}=  \hbar \omega \left(2n+l+\frac{3}{2}\right),
\]
!et
with $n=0,1,2,\dots$ and $l=0,1,2,\dots$.
!eblock



!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
Since we have made a transformation to spherical coordinates it means that 
$r\in [0,\infty)$.  
The quantum number
$l$ is the orbital momentum of the nucleon.   Then we substitute $R(r) = (1/r) u(r)$ and obtain
!bt
\[
  -\frac{\hbar^2}{2 m} \frac{d^2}{dr^2} u(r) 
       + \left ( V(r) + \frac{l (l + 1)}{r^2}\frac{\hbar^2}{2 m}
                                    \right ) u(r)  = E u(r) .
\]
!et
The boundary conditions are $u(0)=0$ and $u(\infty)=0$.
!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
We introduce a dimensionless variable $\rho = (1/\alpha) r$
where $\alpha$ is a constant with dimension length and get
!bt
\[
  -\frac{\hbar^2}{2 m \alpha^2} \frac{d^2}{d\rho^2} u(\rho) 
       + \left ( V(\rho) + \frac{l (l + 1)}{\rho^2}
         \frac{\hbar^2}{2 m\alpha^2} \right ) u(\rho)  = E u(\rho) .
\]
!et
Let us specialize to $l=0$. 
Inserting $V(\rho) = (1/2) k \alpha^2\rho^2$ we end up with
!bt
\[
  -\frac{\hbar^2}{2 m \alpha^2} \frac{d^2}{d\rho^2} u(\rho) 
       + \frac{k}{2} \alpha^2\rho^2u(\rho)  = E u(\rho) .
\]
!et
We multiply thereafter with $2m\alpha^2/\hbar^2$ on both sides and obtain
!bt
\[
  -\frac{d^2}{d\rho^2} u(\rho) 
       + \frac{mk}{\hbar^2} \alpha^4\rho^2u(\rho)  = \frac{2m\alpha^2}{\hbar^2}E u(\rho) .
\]
!et
!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
We have thus
!bt
\[
  -\frac{d^2}{d\rho^2} u(\rho) 
       + \frac{mk}{\hbar^2} \alpha^4\rho^2u(\rho)  = \frac{2m\alpha^2}{\hbar^2}E u(\rho) .
\]
!et
The constant $\alpha$ can now be fixed
so that
!bt
\[
\frac{mk}{\hbar^2} \alpha^4 = 1,
\]
!et
or 
!bt
\[
\alpha = \left(\frac{\hbar^2}{mk}\right)^{1/4}.
\]
!et
!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
Defining
!bt 
\[
\lambda = \frac{2m\alpha^2}{\hbar^2}E,
\]
!et
we can rewrite Schroedinger's equation as
!bt
\[
  -\frac{d^2}{d\rho^2} u(\rho) + \rho^2u(\rho)  = \lambda u(\rho) .
\]
!et
This is the first equation to solve numerically. In three dimensions 
the eigenvalues for $l=0$ are 
$\lambda_0=3,\lambda_1=7,\lambda_2=11,\dots .$
!eblock



!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
We use the standard
expression for the second derivative of a function $u$
!bt
\begin{equation}
    u''=\frac{u(\rho+h) -2u(\rho) +u(\rho-h)}{h^2} +O(h^2),
    label{eq:diffoperation}
\end{equation} 
!et
where $h$ is our step.
Next we define minimum and maximum values for the variable $\rho$,
$\rho_{\mathrm{min}}=0$  and $\rho_{\mathrm{max}}$, respectively.
You need to check your results for the energies against different values
$\rho_{\mathrm{max}}$, since we cannot set
$\rho_{\mathrm{max}}=\infty$. 
!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
With a given number of steps, $n_{\mathrm{step}}$, we then 
define the step $h$ as
!bt
\[
  h=\frac{\rho_{\mathrm{max}}-\rho_{\mathrm{min}} }{n_{\mathrm{step}}}.
\]
!et
Define an arbitrary value of $\rho$ as 
!bt
\[
    \rho_i= \rho_{\mathrm{min}} + ih \hspace{1cm} i=0,1,2,\dots , n_{\mathrm{step}}
\]
!et
we can rewrite the Schroedinger equation for $\rho_i$ as
!bt
\[
-\frac{u(\rho_i+h) -2u(\rho_i) +u(\rho_i-h)}{h^2}+\rho_i^2u(\rho_i)  = \lambda u(\rho_i),
\]
!et
or in  a more compact way
!bt
\[
-\frac{u_{i+1} -2u_i +u_{i-1}}{h^2}+\rho_i^2u_i=-\frac{u_{i+1} -2u_i +u_{i-1} }{h^2}+V_iu_i  = \lambda u_i.
\]
!et
!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
Define first the diagonal matrix element
!bt
\[
   d_i=\frac{2}{h^2}+V_i,
\]
!et
and the non-diagonal matrix element 
!bt
\[
   e_i=-\frac{1}{h^2}.
\]
!et
In this case the non-diagonal matrix elements are given by a mere constant. *All non-diagonal matrix elements are equal*.

!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 
With these definitions the Schroedinger equation takes the following form
!bt
\[
d_iu_i+e_{i-1}u_{i-1}+e_{i+1}u_{i+1}  = \lambda u_i,
\]
!et
where $u_i$ is unknown. We can write the 
latter equation as a matrix eigenvalue problem 
!bt
\begin{equation}
    \left( \begin{array}{ccccccc} d_1 & e_1 & 0   & 0    & \dots  &0     & 0 \\
                                e_1 & d_2 & e_2 & 0    & \dots  &0     &0 \\
                                0   & e_2 & d_3 & e_3  &0       &\dots & 0\\
                                \dots  & \dots & \dots & \dots  &\dots      &\dots & \dots\\
                                0   & \dots & \dots & \dots  &\dots       &d_{n_{\mathrm{step}}-2} & e_{n_{\mathrm{step}}-1}\\
                                0   & \dots & \dots & \dots  &\dots       &e_{n_{\mathrm{step}}-1} & d_{n_{\mathrm{step}}-1}

             \end{array} \right)      \left( \begin{array}{c} u_{1} \\
                                                              u_{2} \\
                                                              \dots\\ \dots\\ \dots\\
                                                              u_{n_{\mathrm{step}}-1}
             \end{array} \right)=\lambda \left( \begin{array}{c} u_{1} \\
                                                              u_{2} \\
                                                              \dots\\ \dots\\ \dots\\
                                                              u_{n_{\mathrm{step}}-1}
             \end{array} \right) 
      label{eq:sematrix}
\end{equation} 
!et
!eblock


!split
=====  Numerical solution of the single-particle Schroedinger equation =====
!bblock 

To be more detailed we have
!bt
\begin{equation}
    \left( \begin{array}{ccccccc} \frac{2}{h^2}+V_1 & -\frac{1}{h^2} & 0   & 0    & \dots  &0     & 0 \\
                                -\frac{1}{h^2} & \frac{2}{h^2}+V_2 & -\frac{1}{h^2} & 0    & \dots  &0     &0 \\
                                0   & -\frac{1}{h^2} & \frac{2}{h^2}+V_3 & -\frac{1}{h^2}  &0       &\dots & 0\\
                                \dots  & \dots & \dots & \dots  &\dots      &\dots & \dots\\
                                0   & \dots & \dots & \dots  &\dots       &\frac{2}{h^2}+V_{n_{\mathrm{step}}-2} & -\frac{1}{h^2}\\
                                0   & \dots & \dots & \dots  &\dots       &-\frac{1}{h^2} & \frac{2}{h^2}+V_{n_{\mathrm{step}}-1}

             \end{array} \right)  
label{eq:matrixse} 
\end{equation} 
!et
Recall that the solutions are known via the boundary conditions at
$i=n_{\mathrm{step}}$ and at the other end point, that is for  $\rho_0$.
The solution is zero in both cases.
!eblock



!split
=====  Program to solve Schroedinger's equation  =====
!bblock 
The following python program is an example of how one can obtain the eigenvalues for a single-nucleon moving in a harmonic oscillator potential. It is rather easy to change the onebody-potential with ones like a Woods-Saxon potential. 



!eblock


!split
=====  Program to solve Schroedinger's equation  =====
!bblock 
The code sets up the Hamiltonian matrix by defining the the minimun and maximum values of $r$ with a
maximum value of integration points.  These are set in the initialization function. It plots the 
eigenfunctions of the three lowest eigenstates.
!bc pycod
#Program which solves the one-particle Schrodinger equation
#for a potential specified in function
#potential().

from  matplotlib import pyplot as plt
import numpy as np
#Function for initialization of parameters
def initialize():
    RMin = 0.0
    RMax = 10.0
    lOrbital = 0
    Dim = 400
    return RMin, RMax, lOrbital, Dim
# Harmonic oscillator here, easy to change
def potential(r):
    return 0.5*r*r

#Get the boundary, orbital momentum and number of integration points
RMin, RMax, lOrbital, Dim = initialize()

#Initialize constants
Step    = RMax/(Dim+1)
DiagConst = 1.0/ (Step*Step)
NondiagConst =  -0.5 / (Step*Step)
OrbitalFactor = 0.5*lOrbital * (lOrbital + 1.0)

#Calculate array of potential values
v = np.zeros(Dim)
r = np.linspace(RMin,RMax,Dim)
for i in range(Dim):
    r[i] = RMin + (i+1) * Step;
    v[i] = potential(r[i]) + OrbitalFactor/(r[i]*r[i]);

#Setting up a tridiagonal matrix and finding eigenvectors and eigenvalues
Matrix = np.zeros((Dim,Dim))
Matrix[0,0] = DiagConst + v[0];
Matrix[0,1] = NondiagConst;
for i in range(1,Dim-1):
    Matrix[i,i-1]  = NondiagConst;
    Matrix[i,i]    = DiagConst + v[i];
    Matrix[i,i+1]  = NondiagConst;
Matrix[Dim-1,Dim-2] = NondiagConst;
Matrix[Dim-1,Dim-1] = DiagConst + v[Dim-1];
# diagonalize and obtain eigenvalues, not necessarily sorted
EigValues, EigVectors = np.linalg.eig(Matrix)
# sort eigenvectors and eigenvalues
permute = EigValues.argsort()
EigValues = EigValues[permute]
EigVectors = EigVectors[:,permute]
# now plot the results for the three lowest lying eigenstates
for i in range(3):
    print(EigValues[i])
FirstEigvector = EigVectors[:,0]
SecondEigvector = EigVectors[:,1]
ThirdEigvector = EigVectors[:,2]
plt.plot(r, FirstEigvector**2 ,'b-',r, SecondEigvector**2 ,'g-',r, ThirdEigvector**2 ,'r-')
plt.axis([0,4.6,0.0, 0.025])
plt.xlabel(r'$r$')
plt.ylabel(r'Radial probability $r^2|R(r)|^2$')
plt.title(r'Radial probability distributions for three lowest-lying states')
plt.show()

!ec
!eblock





!split
=====  Exercise: Eigenstates and eigenvalues of single-particle problems  =====


!bsubex
Compute the eigenvalues of the three lowest states with a given orbital momentum and oscillator frequency $\omega$. Study these results as functions of the the maximum value of $r$ and the number of integration points $n$, starting with  $r_{\mathrm{max}}=10$. Compare the computed ones with the exact values and comment your results.
!esubex
!bsubex
Plot thereafter the eigenfunctions as functions of $r$ for the lowest-lying state with a given orbital momentum $l$.
!esubex
!bsubex
Replace thereafter the harmonic oscillator potential with a Woods-Saxon potential using the parameters discussed above. Compute the lowest five eigenvalues and plot the eigenfunction of the lowest-lying state. How does this compare with the harmonic oscillator? Comment your results and possible implications for nuclear physics studies.
!esubex



!split
=====  Where do we go from here? =====

!bblock
With a single-particle basis (an orthonormal basis) we can construct a basis of anti-symmetrized and orthogonal many-body states
(called Slater determinants). This basis can then be used to study various many-body methods and properties of nuclei.
Recall that nuclei are complicated many-body systems. 
!eblock

!bblock
A single-particle basis like the harmonic oscillator basis is also a useful basis for computing integrals involved in the computation of various matrix elements.
!eblock

Hopefully, this gives you an input to the discussions to come of Alex Brown and Heiko Hergert.  Best wishes to you all and enjoy your time at MSU.  
